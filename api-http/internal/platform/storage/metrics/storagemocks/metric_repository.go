// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package storagemocks

import (
	context "context"

	metrics "example.com/gotraining/go-hexagonal_http_api-course/internal/metrics"
	mock "github.com/stretchr/testify/mock"
)

// MetricRepository is an autogenerated mock type for the MetricRepository type
type MetricRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: ctx
func (_m *MetricRepository) GetAll(ctx context.Context) ([]metrics.Metric, error) {
	ret := _m.Called(ctx)

	var r0 []metrics.Metric
	if rf, ok := ret.Get(0).(func(context.Context) []metrics.Metric); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]metrics.Metric)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, metric
func (_m *MetricRepository) Save(ctx context.Context, metric metrics.Metric) error {
	ret := _m.Called(ctx, metric)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, metrics.Metric) error); ok {
		r0 = rf(ctx, metric)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
